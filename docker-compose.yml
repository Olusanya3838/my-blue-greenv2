version: '3.8'

services:
  # Nginx - the reverse proxy that does failover
  nginx:
    image: nginx:alpine
    ports:
      - "8080:80"  # Public port - clients connect here
    volumes:
      - ./nginx/nginx.conf.template:/etc/nginx/nginx.conf.template:ro
      - ./entrypoint.sh:/entrypoint.sh:ro
    environment:
      - PORT=${PORT:-3000} 
      - ACTIVE_POOL=${ACTIVE_POOL:-blue}  # Which pool is primary
    command: ["/bin/sh", "/entrypoint.sh"]
    depends_on:
      - app_blue
      - app_green
    restart: unless-stopped

  # Blue service - one instance of the Node.js app
  app_blue:
    image: ${BLUE_IMAGE}  # Pull from BLUE_IMAGE in .env
    ports:
      - "8081:${PORT:-3000}"  # Expose so grader can trigger chaos
    environment:
      - APP_POOL=blue  # Tell the app it's "blue"
      - RELEASE_ID=${RELEASE_ID_BLUE}  # Pass release ID
      - PORT=${PORT:-3000}
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "wget", "--quiet", "--tries=1", "--spider", "http://localhost:${PORT:-3000}/healthz"]
      interval: 5s
      timeout: 3s
      retries: 3

  # Green service - another instance of the Node.js app
  app_green:
    image: ${GREEN_IMAGE}  # Pull from GREEN_IMAGE in .env
    ports:
      - "8082:${PORT:-3000}"  # Expose so grader can trigger chaos
    environment:
      - APP_POOL=green  # Tell the app it's "green"
      - RELEASE_ID=${RELEASE_ID_GREEN}  # Pass release ID
      - PORT=${PORT:-3000}
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "wget", "--quiet", "--tries=1", "--spider", "http://localhost:${PORT:-3000}/healthz"]
      interval: 5s
      timeout: 3s
      retries: 3
